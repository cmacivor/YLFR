@model YLFR.ViewModels.Page2ViewModel


@{
    ViewBag.Title = "Page2";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Page2</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Page2ViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.HaveBeenArrested, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.HaveBeenArrested, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(m => m.HaveBeenArrested, Model.DropDownListOptions, "Please Select", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.HaveBeenArrested, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display:none" id="divMisdemeanorCharge">
            @Html.LabelFor(model => model.MisdemeanorCharge, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MisdemeanorCharge, new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.DropDownListFor(m => m.MisdemeanorCharge, Model.DropDownListOptions, "Please Select", new { htmlAttributes = new { @class = "form-control"} })*@
                @Html.ValidationMessageFor(model => model.MisdemeanorCharge, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DrivingViolation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.DrivingViolation, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(m => m.DrivingViolation, Model.DropDownListOptions, "Please Select", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DrivingViolation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="divDrivingViolationCharge" style="display:none">
            @Html.LabelFor(model => model.DrivingViolationCharge, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DrivingViolationCharge, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DrivingViolationCharge, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FacebookRegistered, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.FacebookRegistered, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(m => m.FacebookRegistered, Model.DropDownListOptions, "Please Select", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FacebookRegistered, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="divFacebookInvite" style="display:none">
            @Html.LabelFor(model => model.FacebookInvite, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.FacebookInvite, new { htmlAttributes = new { @class = "form-control" }})*@
                @Html.DropDownListFor(m => m.FacebookInvite, Model.DropDownListOptions, "Please Select", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FacebookInvite, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HaveTransportation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.HaveTransportation, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(m => m.HaveTransportation, Model.DropDownListOptions, "Please Select", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.HaveTransportation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="divProvideRide" style="display:none">
            @Html.LabelFor(model => model.ProvideRide, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.ProvideRide, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(m => m.ProvideRide, Model.DropDownListOptions, "Please Select", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProvideRide, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-inline">
        <div class="form-group">
            <h3>Time Commitment and Availability</h3>
            <label class="control-label col-md-3">Day(s) Available:</label>
            <div class="col-md-offset-2 col-md-10">
                @Html.CheckBoxListFor(model => model.PostedAvailableDays.AvailableDayIds,
                    model => model.AvailableDays,
                    days => days.Name,
                    days => days.Name,
                    model => model.SelectedAvailableDays,
                    position: MvcCheckBoxList.Model.Position.Vertical)


                @*<div class="checkbox">
                    <label>
                        <input type="checkbox" name="availableDays" class="availableDays" value="Monday" />Monday
                    </label>
                    <label>
                        <input type="checkbox" name="availableDays" class="availableDays" value="Tuesday" />Tuesday
                    </label>
                    <label>
                        <input type="checkbox" name="availableDays" class="availableDays" value="Wednesday" />Wednesday
                    </label>
                    <label>
                        <input type="checkbox" name="availableDays" class="availableDays" value="Thursday" />Thursday
                    </label>
                    <label>
                        <input type="checkbox" name="availableDays" class="availableDays" value="Friday" />Friday
                    </label>
                </div>*@

            </div>
        </div>
    </div>
    <div class="form-horizontal">
        <div class="form-group">
            <label class="control-label col-md-2">Time(s) Available:</label>
            <div class="col-md-offset-2 col-md-10">
                @Html.CheckBoxListFor(model => model.PostedAvailableTimes.AvailableTimeIDs,
                                      model => model.AvailableTimes,
                                      times => times.Name,
                                      times => times.Name,
                                      model => model.SelectedAvailableTimes,
                                      position: MvcCheckBoxList.Model.Position.Vertical)
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Indicate Areas of Interest:</label>
            <div class="col-md-offset-2 col-md-10">
                @Html.CheckBoxListFor(model => model.PostedInterestAreas.AvailableInterestAreaIDs,
                                  model => model.AvailableInterestAreas,
                                  areas => areas.Name,
                                  areas => areas.Name,
                                  model => model.SelectedInterestAreas,
                                  position: MvcCheckBoxList.Model.Position.Vertical)
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">If you mark more than one area, please put a number to indicate the order of your preference.</label>
            <div class="col-md-offset-2 col-md-10" id="divInterestAreaRanking" style="display:none">
                @*<table>
                @foreach (var item in @Model.AvailableLearningCenters)
                {
                    <tr>
                        <td>@item.Name: @Html.EditorFor(x => item.Name) </td>
                    </tr>
                }
            </table>*@
                <div id="container">
                    <table id="tblInterestAreas" class="table table-striped table-bordered" cellspacing="0" width="100%">
                        <thead>
                            <tr>
                                @*<th>InterestAreaID</th>
                    <th>ApplicantID</th>*@
                                <th>Interest Area</th>
                                <th>Ranking</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
                <div class="form-group">


                </div>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label">Do you have a preference or connection to one of the Learning Centers?</label>
            <div class="col-md-offset-2 col-md-10">
                @Html.CheckBoxListFor(model => model.PostedLearningCenters.AvailableLearningCenterIDs,
                                  model => model.AvailableLearningCenters,
                                  model => model.Name,
                                  model => model.Name,
                                  model => model.SelectedLearningCenters,
                                  position: MvcCheckBoxList.Model.Position.Vertical)

            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="btnSubmit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="~/Scripts/json3.min.js"></script>
    <script type="text/javascript" src="~/Scripts/DataTables-1.10.4/jquery.dataTables.min.js"></script>
    @*<script type="text/javascript" src="~/Scripts/DataTables-1.10.4/dataTables.jqueryui.js"></script>*@
    <script type="text/javascript" src="~/Scripts/DataTables-1.10.4/dataTables.bootstrap.js"></script>
    <script type="text/javascript" src="~/Scripts/DataTables-1.10.4/dataTables.bootstrap.js"></script>
    <link rel="stylesheet" type="text/css" href="~/Content/bootstrap.min.css" />
    <link rel="stylesheet" type="text/css" href="~/Content/DataTables-1.10.4/css/dataTables.bootstrap.css" />
    @*<script type="text/javascript" src="~/Scripts/DataTables-1.10.4/dataTables.jqueryui.js"></script>*@
    @*<link rel="stylesheet" type="text/css" href="~/Content/DataTables-1.10.4/css/dataTables.jqueryui.css" />*@
    @*<link rel="stylesheet" type="text/css" href="~/Content/DataTables-1.10.4/css/jquery.dataTables_themeroller.css" />*@

    <script type="text/javascript">
        //alert('test');
        //need to loop through all selected checkboxes and render textboxes so they have the ability to indicate order of Interest Areas
        //then make an ajax call on submit
        $(document).ready(function () {

            //$('#btnSubmit').click(function () {
            //    var checkedValues = $('input[name="availableDays"]:checked').map(function () {
            //        return this.value;
            //    }).get();
            //    console.log(checkedValues);
            //});

           
            $('input[name="PostedInterestAreas.AvailableInterestAreaIDs"]').click(function () {
                //will want to save these in the corresponding table before letting them rate their entries.
                var count = $('input[name="PostedInterestAreas.AvailableInterestAreaIDs"]:checked').length;
                //alert(count);
                if (count > 1) {
                    //alert(count);

                    var uncheckedValues = $('input[name="PostedInterestAreas.AvailableInterestAreaIDs"]:not(:checked)').map(function () {
                        return this.value;
                    }).get();
                    //delete unchecked values?
                    

                    var checkedValues = $('input[name="PostedInterestAreas.AvailableInterestAreaIDs"]:checked').map(function () {
                        return this.value;
                    }).get();
                    //console.log(checkedValues);
                    //make ajax call to insert rows into 
                    $.ajax({
                        url: "/Home/SaveInterestArea",
                        type: "POST",
                        contentType: 'application/json; charset=utf-8',
                        data: JSON3.stringify({
                            learningCenterPref: {
                                'AvailableInterestAreaIDs': checkedValues
                            }
                        }),
                        success: function () {
                            //LoadInterestAreaDataTable();
                            if ($.fn.dataTable.isDataTable('#tblInterestAreas')) {
                                table = $('#tblInterestAreas').DataTable();
                                table.ajax.reload();
                            }
                            else {
                                //table = $('#example').DataTable({
                                //    //paging: false
                                //});

                                LoadInterestAreaDataTable();
                            }

                        },
                        error: function () {

                        }
                    });
                }
                if (count == 1)
                {
                    $('#divInterestAreaRanking').hide();
                }
            });

            function LoadInterestAreaDataTable()
            {
                //load jquery Datatable with data just entered and make it editable
                $('#divInterestAreaRanking').show();
                $('#tblInterestAreas').dataTable({
                    "bServerSide": true,
                    "sAjaxSource": "GetInterestAreasByEmailID",
                    "searching": false,
                    "lengthChange": false,
                    //"retrieve": true,
                    //"jQueryUI": true,
                    "paging": false,
                    "bProcessing": true,
                    "aoColumns": [
                        //{
                        //    "sName": "ID",
                        //    "bSearchable": false,
                        //    "bSortable": false

                        //},
                        //    {
                        //        "sName": "ApplicantID",
                        //        "bSearchable": false,
                        //    },
                            {
                                "sName": "InterestArea",
                                "bSearchable": false,
                            },
                            {
                                "sName": "PreferenceRanking",
                                "bSearchable": false,
                            }
                    ]
                });
            }
            
            $('#availableDays').change(function () {
                alert('test suc');
            });

            $('#HaveBeenArrested').change(function() {
                var answer = $('#HaveBeenArrested').val();
                if (answer == "Yes")
                {
                    $('#divMisdemeanorCharge').show();
                }
                if (answer == "No" || answer == "Please Select")
                {
                    $('#divMisdemeanorCharge').hide();
                }
            });

            $('#DrivingViolation').change(function () {
                var answer = $('#DrivingViolation').val();
                if (answer == "Yes")
                {
                    $('#divDrivingViolationCharge').show();
                }
                if (answer == "No" || answer == "Please Select")
                {
                    $('#divDrivingViolationCharge').hide();
                }
            });

            $('#FacebookRegistered').change(function () {
                var answer = $('#FacebookRegistered').val();
                if (answer == "Yes")
                {
                    $('#divFacebookInvite').show();
                }
                if (answer == "No" || answer == "Please Select")
                {
                    $('#divFacebookInvite').hide();
                }
            });

            $('#HaveTransportation').change(function () {
                var answer = $('#HaveTransportation').val();
                if (answer == "Yes")
                {
                    $('#divProvideRide').show();
                }
                if (answer == "No" || answer == "Please Select")
                {
                    $('#divProvideRide').hide();
                }
            });
        });
    </script>
}
